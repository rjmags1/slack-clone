name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: slack_clone_test
        ports:
          - 5433:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
    - uses: actions/checkout@v3
  
    - name: Start PostgreSQL Docker container
      run: |
        docker run -d \
          -p 5433:5432 \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_PASSWORD=postgres \
          -e POSTGRES_DB=slack_clone_test \
          --health-cmd pg_isready \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 3 \
          --name test-postgres \
          postgres:latest

    - name: Wait for Postgres to be ready
      run: |
        timeout=10
        interval=1
        while ! docker exec -i "$(docker ps -q -f name=postgres)" pg_isready -U postgres; do
          sleep $interval
          timeout=$((timeout - interval))
          if [[ $timeout -le 0 ]]; then
            echo "Timeout: PostgreSQL failed to start."
            exit 1
          fi
        done
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
